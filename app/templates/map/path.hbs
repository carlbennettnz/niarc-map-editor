{{path-editor
  viewport=mapViewport
  layers=layers
  map=model.map
  path=path
  selectedEvents=selectedEvents
  highlightedEvent=highlightedEvent
  pathDidChange=(action 'updateEvents')
  addPoint=(action 'addPoint')
  selectPoint=(action 'selectEvent')
  togglePointSelection=(action 'toggleEventSelection')
  highlightEvent=(action 'highlightEvent')
}}

<aside class="ui-modules">
  {{map-mode-navigator}}

  {{event-timeline
    events=connection.events
    selectedEvents=selectedEvents
    highlightedEvent=highlightedEvent
    addEvent=(action 'addEvent')
    deleteEvent=(action 'deleteEvent')
    selectEvent=(action 'selectEvent')
    toggleEventSelection=(action 'toggleEventSelection')
    highlightEvent=(action 'highlightEvent')
  }}

  <div class="ui-module connection">
    <div class="connection-indicator {{if connection.isConnected 'connected'}} {{if connection.isConnecting 'connecting'}}">
      {{#if connection.isConnecting}}
        {{fa-icon 'circle-o-notch' spin=true}}
      {{/if}}
      
      {{#if connection.isConnected}}
        {{fa-icon 'check'}}
      {{/if}}

      {{#unless (or connection.isConnecting connection.isConnected)}}
        {{fa-icon 'times'}}
      {{/unless}}
    </div>
    
    {{input value=connection.address}}
    
    {{#if connection.isConnecting}}
      <button {{action 'disconnect'}}>Cancel</button>
    {{/if}}
    
    {{#if connection.isConnected}}
      <button {{action 'disconnect'}}>Disconnect</button>
    {{/if}}
    
    {{#unless (or connection.isConnecting connection.isConnected)}}
      <button {{action 'connect'}}>Connect</button>
    {{/unless}}
  </div>
</aside>

{{#if compiledEvent}}
  <aside class="ui-modules attributes">
    {{component (concat 'event-editors/' compiledEvent.type)
      event=compiledEvent
      hasNextEvent=hasNextEvent
      hasPreviousEvent=hasPreviousEvent
      jumpEventSelection=(action 'jumpEventSelection')
    }}
  </aside>
{{/if}}
